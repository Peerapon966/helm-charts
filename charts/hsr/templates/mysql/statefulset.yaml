{{- if .Values.mysql.useLocal }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hsr.name" . }}-mysql
spec:
  serviceName: {{ include "hsr.name" . }}-mysql
  replicas: {{ int .Values.mysql.replicas }}
  selector:
    matchLabels:
      app: {{ include "hsr.name" . }}-mysql
  template:
    metadata:
      labels:
        app: {{ include "hsr.name" . }}-mysql
    spec:
      {{- if .Values.mysql.allowControlPlane }}
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: mysql
          image: {{ printf "mysql:%s" (default "latest" .Values.mysql.version) }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          command: ["/bin/bash", "-c"]
          args:
          - |
            ORDINAL=${HOSTNAME##*-}
            exec docker-entrypoint.sh \
              --server-id=$((ORDINAL + 1)) \
              --gtid-mode=ON \
              --enforce-gtid-consistency=ON \
              --log-bin=mysql-bin \
              --binlog-format=ROW \
              --bind-address=0.0.0.0 \
              --relay-log=mysql-${HOSTNAME}-relay-bin
          ports:
          - containerPort: 3306
            name: mysql
          envFrom:
            - secretRef:
                name: {{ include "hsr.name" . }}-mysql
          volumeMounts:
          - name: mysql
            mountPath: /var/lib/mysql
          - name: init-script
            mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
      volumes:
      - name: init-script
        configMap:
          name: {{ include "hsr.name" . }}-mysql-init-script
          defaultMode: 0755
      terminationGracePeriodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: mysql
    spec:
      accessModes: ["ReadWriteOnce"]
      {{- if .Values.mysql.storageClass }}
      storageClassName: {{ .Values.mysql.storageClass | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.mysql.storageSize }}Gi
{{- end }}