{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "hostname": {
      "type": "string",
      "description": "The base domain or internal hostname for services"
    },
    "namespace": {
      "type": "string",
      "description": "The Kubernetes namespace in which all resources will be deployed"
    },
    "next": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Docker image tag or version of the Next.js application"
        },
        "replicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of replicas to run for the Next.js application"
        },
        "path": {
          "type": "string",
          "description": "The base path on which the Next.js app is served behind the ingress"
        },
        "port": {
          "type": "integer",
          "description": "The port on which the Next.js application listens"
        },
        "allowControlPlane": {
          "type": "boolean",
          "description": "Whether to allow scheduling Next.js pods on control plane nodes"
        }
      },
      "required": [
        "version",
        "replicas",
        "path",
        "port"
      ]
    },
    "mysql": {
      "type": "object",
      "properties": {
        "useLocal": {
          "type": "boolean",
          "description": "Whether to deploy MySQL locally as a StatefulSet"
        },
        "version": {
          "type": "string",
          "description": "MySQL Docker image version"
        },
        "replicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of MySQL replicas to deploy"
        },
        "storageSize": {
          "type": "integer",
          "description": "Size (in Gi) of the persistent volume for MySQL"
        },
        "allowControlPlane": {
          "type": "boolean",
          "description": "Whether to allow scheduling MySQL pods on control plane nodes"
        },
        "connection": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "description": "Hostname for MySQL service"
            },
            "user": {
              "type": "string",
              "description": "MySQL user for application access"
            },
            "password": {
              "type": "string",
              "description": "Password for the MySQL user"
            },
            "port": {
              "type": "integer",
              "description": "MySQL port number"
            },
            "database": {
              "type": "string",
              "description": "MySQL database name"
            }
          },
          "required": [
            "port",
            "database"
          ]
        }
      },
      "required": [
        "useLocal",
        "version",
        "replicas",
        "storageSize",
        "allowControlPlane",
        "connection"
      ]
    },
    "phpmyadmin": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to deploy phpMyAdmin"
        },
        "version": {
          "type": "string",
          "description": "Docker image tag or version of phpMyAdmin"
        },
        "replicas": {
          "type": "integer",
          "description": "Number of phpMyAdmin replicas to deploy"
        },
        "path": {
          "type": "string",
          "description": "The path at which phpMyAdmin is exposed behind the ingress"
        },
        "port": {
          "type": "integer",
          "description": "The port on which phpMyAdmin container listens"
        },
        "arbitrary": {
          "type": "boolean",
          "description": "Enables PMA_ARBITRARY=1 for arbitrary MySQL server connections"
        },
        "allowControlPlane": {
          "type": "boolean",
          "description": "Whether to allow scheduling phpMyAdmin pods on control plane nodes"
        }
      },
      "required": [
        "enabled",
        "version",
        "replicas",
        "path",
        "port",
        "arbitrary"
      ]
    },
    "redis": {
      "type": "object",
      "properties": {
        "useLocal": {
          "type": "boolean",
          "description": "Whether to deploy Redis as a local StatefulSet"
        },
        "version": {
          "type": "string",
          "description": "Redis image version to use"
        },
        "replicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of Redis replicas"
        },
        "storageSize": {
          "type": "integer",
          "description": "Size (in Gi) of the persistent volume for Redis"
        },
        "allowControlPlane": {
          "type": "boolean",
          "description": "Whether to allow scheduling Redis pods on control plane nodes"
        },
        "connection": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "description": "Redis hostname or service DNS"
            },
            "port": {
              "type": "integer",
              "description": "Redis port number"
            },
            "password": {
              "type": "string",
              "description": "Password used to connect to Redis"
            }
          },
          "required": [
            "port"
          ]
        }
      },
      "required": [
        "useLocal",
        "version",
        "replicas",
        "storageSize",
        "allowControlPlane",
        "connection"
      ]
    },
    "mailhog": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to deploy MailHog"
        },
        "version": {
          "type": "string",
          "description": "MailHog Docker image version"
        },
        "replicas": {
          "type": "integer",
          "description": "Number of MailHog replicas to deploy"
        },
        "path": {
          "type": "string",
          "description": "The path at which MailHog is exposed behind the ingress"
        },
        "port": {
          "type": "integer",
          "description": "The port on which the MailHog web UI is exposed"
        },
        "smtpPort": {
          "type": "integer",
          "description": "The port on which MailHog listens for SMTP traffic"
        },
        "allowControlPlane": {
          "type": "boolean",
          "description": "Whether to allow scheduling MailHog pods on control plane nodes"
        }
      },
      "required": [
        "enabled",
        "version",
        "replicas",
        "path",
        "port",
        "smtpPort"
      ]
    }
  },
  "required": [
    "hostname",
    "namespace",
    "next",
    "mysql",
    "phpmyadmin",
    "redis",
    "mailhog"
  ]
}